name: Documentation Link Check

on:
  push:
    branches: [ main, experimental ]
    paths:
      - 'docs/**/*.md'
      - '*.md'
      - '.github/workflows/docs-link-check.yml'
      - 'scripts/check-docs-links.py'
  pull_request:
    branches: [ main ]
    paths:
      - 'docs/**/*.md'
      - '*.md'
      - '.github/workflows/docs-link-check.yml'
      - 'scripts/check-docs-links.py'
  schedule:
    # Run weekly on Mondays at 9 AM UTC
    - cron: '0 9 * * 1'
  workflow_dispatch:
    inputs:
      verbose:
        description: 'Enable verbose output'
        required: false
        default: 'false'
        type: boolean

jobs:
  check-docs-links:
    runs-on: ubuntu-latest
    name: Check Documentation Links

    permissions:
      contents: read
      issues: write  # For creating issues on failures
      pull-requests: write  # For commenting on PRs

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests

      - name: Make script executable
        run: chmod +x scripts/check-docs-links.py

      - name: Run documentation link check
        id: link-check
        run: |
          set +e  # Don't exit on error

          VERBOSE_FLAG=""
          if [[ "${{ github.event.inputs.verbose }}" == "true" ]]; then
            VERBOSE_FLAG="--verbose"
          fi

          python scripts/check-docs-links.py $VERBOSE_FLAG --output docs-link-report.txt
          EXIT_CODE=$?

          echo "exit_code=$EXIT_CODE" >> $GITHUB_OUTPUT

          # Create summary for GitHub
          if [[ $EXIT_CODE -eq 0 ]]; then
            echo "‚úÖ All documentation links are valid!" >> $GITHUB_STEP_SUMMARY
          else
            echo "‚ùå Documentation link issues found!" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "## Issues Summary" >> $GITHUB_STEP_SUMMARY
            head -20 docs-link-report.txt >> $GITHUB_STEP_SUMMARY
            if [[ $(wc -l < docs-link-report.txt) -gt 20 ]]; then
              echo "... (see full report in artifacts)" >> $GITHUB_STEP_SUMMARY
            fi
          fi

          exit $EXIT_CODE

      - name: Upload link check report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: docs-link-report
          path: docs-link-report.txt

      - name: Comment on PR (if applicable)
        if: failure() && github.event_name == 'pull_request'
        uses: actions/github-script@v6
        with:
          script: |
            const fs = require('fs');

            let report = '';
            try {
              report = fs.readFileSync('docs-link-report.txt', 'utf8');
            } catch (error) {
              report = 'Could not read link check report.';
            }

            // Truncate if too long for comment
            if (report.length > 32000) {
              report = report.substring(0, 32000) + '\n\n... (truncated, see full report in artifacts)';
            }

            const comment = `## üìù Documentation Link Check Failed

            The documentation link checker found issues in this pull request:

            \`\`\`
            ${report}
            \`\`\`

            Please fix these links before merging. See the [documentation navigation guide](../docs/navigation.md) for help with cross-repository linking.

            üìé Full report available in [workflow artifacts](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}).`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });

      - name: Create issue on scheduled failure
        if: failure() && github.event_name == 'schedule'
        uses: actions/github-script@v6
        with:
          script: |
            const fs = require('fs');

            let report = '';
            try {
              report = fs.readFileSync('docs-link-report.txt', 'utf8');
            } catch (error) {
              report = 'Could not read link check report.';
            }

            const title = `üìù Documentation Links Need Attention (${new Date().toISOString().split('T')[0]})`;
            const body = `## Documentation Link Check Failed

            The weekly documentation link check found issues:

            \`\`\`
            ${report}
            \`\`\`

            ### Actions Needed
            - [ ] Fix broken internal links
            - [ ] Update external links if necessary
            - [ ] Verify cross-repository references
            - [ ] Update navigation.md if link patterns changed

            üìé Full report: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}

            *This issue was created automatically by the documentation link checker.*`;

            github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: title,
              body: body,
              labels: ['documentation', 'maintenance', 'automated']
            });

      - name: Fail workflow if issues found
        if: steps.link-check.outputs.exit_code != '0'
        run: |
          echo "‚ùå Documentation link check failed!"
          echo "See the step summary and artifacts for details."
          exit 1
