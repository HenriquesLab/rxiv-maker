name: Security Scanning

on:
  # Run on schedule (weekly)
  schedule:
    - cron: '0 2 * * 1'  # Monday at 2 AM UTC

  # Run on pull requests that modify dependencies
  pull_request:
    paths:
      - 'pyproject.toml'
      - 'uv.lock'
      - 'requirements*.txt'
      - '.github/workflows/security.yml'

  # Allow manual trigger
  workflow_dispatch:

permissions:
  contents: read
  security-events: write
  actions: read

jobs:
  dependency-scanning:
    name: Dependency Vulnerability Scan
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install UV
        uses: astral-sh/setup-uv@v3
        with:
          version: "latest"
          enable-cache: true

      - name: Install dependencies
        run: |
          uv sync --frozen

      - name: Run pip-audit for dependency scanning
        run: |
          uv run pip-audit --desc --format=json --output=audit-results.json
        continue-on-error: true

      - name: Display audit results
        if: always()
        run: |
          if [ -f audit-results.json ]; then
            echo "🔍 Security audit results:"
            uv run pip-audit --desc --format=table
          fi

      - name: Upload audit results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: security-audit-results
          path: audit-results.json
          retention-days: 30

  codeql-analysis:
    name: CodeQL Analysis
    runs-on: ubuntu-latest

    permissions:
      security-events: write
      packages: read
      actions: read
      contents: read

    strategy:
      fail-fast: false
      matrix:
        language: ['python']

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ matrix.language }}
          queries: +security-and-quality

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install UV and dependencies
        uses: astral-sh/setup-uv@v3
        with:
          version: "latest"
          enable-cache: true

      - name: Install project dependencies
        run: |
          uv sync --frozen

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language:${{ matrix.language }}"

  bandit-security-scan:
    name: Bandit Security Scan
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install bandit
        run: |
          pip install bandit[toml]

      - name: Run bandit security scan
        run: |
          bandit -r src/ -f json -o bandit-results.json
        continue-on-error: true

      - name: Display bandit results
        if: always()
        run: |
          if [ -f bandit-results.json ]; then
            echo "🛡️ Bandit security scan results:"
            bandit -r src/ -f txt
          fi

      - name: Upload bandit results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: bandit-security-results
          path: bandit-results.json
          retention-days: 30

  semgrep-scan:
    name: Semgrep Security Scan
    runs-on: ubuntu-latest

    container:
      image: returntocorp/semgrep

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Run Semgrep scan
        run: |
          semgrep --config=auto --json --output=semgrep-results.json src/
        continue-on-error: true

      - name: Display Semgrep results
        if: always()
        run: |
          if [ -f semgrep-results.json ]; then
            echo "🔎 Semgrep security scan results:"
            semgrep --config=auto --text src/ || true
          fi

      - name: Upload Semgrep results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: semgrep-security-results
          path: semgrep-results.json
          retention-days: 30

  safety-scan:
    name: Safety Vulnerability Scan
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install UV
        uses: astral-sh/setup-uv@v3
        with:
          version: "latest"
          enable-cache: true

      - name: Install dependencies and safety
        run: |
          uv sync --frozen
          pip install safety

      - name: Run Safety scan
        run: |
          safety check --json --output safety-results.json
        continue-on-error: true

      - name: Display Safety results
        if: always()
        run: |
          echo "🛡️ Safety vulnerability scan results:"
          safety check --short-report || true

      - name: Upload Safety results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: safety-security-results
          path: safety-results.json
          retention-days: 30

  security-report:
    name: Security Report Summary
    runs-on: ubuntu-latest
    needs: [dependency-scanning, bandit-security-scan, semgrep-scan, safety-scan]
    if: always()

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download all security artifacts
        uses: actions/download-artifact@v4
        with:
          path: security-results

      - name: Generate security summary
        run: |
          echo "# Security Scan Summary 🛡️" > security-summary.md
          echo "Generated on: $(date -u)" >> security-summary.md
          echo "" >> security-summary.md

          echo "## Scan Results" >> security-summary.md

          # Check if artifacts exist and summarize
          if [ -d "security-results/security-audit-results" ]; then
            echo "✅ Dependency audit completed" >> security-summary.md
          fi

          if [ -d "security-results/bandit-security-results" ]; then
            echo "✅ Bandit security scan completed" >> security-summary.md
          fi

          if [ -d "security-results/semgrep-security-results" ]; then
            echo "✅ Semgrep security scan completed" >> security-summary.md
          fi

          if [ -d "security-results/safety-security-results" ]; then
            echo "✅ Safety vulnerability scan completed" >> security-summary.md
          fi

          echo "" >> security-summary.md
          echo "## Recommendations" >> security-summary.md
          echo "- Review any high-severity vulnerabilities immediately" >> security-summary.md
          echo "- Update dependencies with known security issues" >> security-summary.md
          echo "- Check scan artifacts for detailed findings" >> security-summary.md

          cat security-summary.md

      - name: Upload security summary
        uses: actions/upload-artifact@v4
        with:
          name: security-summary
          path: security-summary.md
          retention-days: 90
