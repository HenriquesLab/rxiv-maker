repos:
  # General file formatting and cleaning (Rust-based alternatives)
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v5.0.0
    hooks:
      - id: trailing-whitespace
        exclude: ^(.*\.(md|tex)|git_submodules/.*)$
      - id: end-of-file-fixer
        exclude: ^(.*\.(md|tex|pdf|png|jpg|jpeg|svg)|git_submodules/.*)$
      - id: check-yaml
        exclude: ^git_submodules/.*$
      - id: check-toml
        exclude: ^git_submodules/.*$
      - id: check-json
        exclude: ^(git_submodules/.*|submodules/.*)$
      - id: check-merge-conflict
        exclude: ^git_submodules/.*$
      - id: check-added-large-files
        args: ['--maxkb=1000']
        exclude: ^git_submodules/.*$
      - id: mixed-line-ending
        args: ['--fix=lf']
        exclude: ^git_submodules/.*$
      - id: check-executables-have-shebangs
        exclude: ^git_submodules/.*$
      - id: check-shebang-scripts-are-executable
        exclude: ^git_submodules/.*$

    # Spell checking with typos (Rust-based)
  - repo: https://github.com/crate-ci/typos
    rev: v1.34.0
    hooks:
      - id: typos
        exclude: ^git_submodules/.*$

  # Python formatting, linting, and import sorting with Ruff (Rust-based)
  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.12.0
    hooks:
      # Linting (includes docstring validation with Google convention)
      - id: ruff
        args: [--fix, --extend-ignore=E501,D100,D101,D102,D103,D107]
        exclude: ^(.*\.ipynb|git_submodules/.*)$
      # Formatting (replaces black, isort, autoflake, docformatter)
      - id: ruff-format
        exclude: ^(.*\.ipynb|git_submodules/.*)$

  # Python type checking with mypy (keeping this as no mature Rust alternative exists)
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.16.1
    hooks:
      - id: mypy
        additional_dependencies: [types-PyYAML, types-requests]
        args: [--ignore-missing-imports]
        exclude: ^(versioneer\.py|src/py/utils\.py|git_submodules/.*)$

  # Security checks with bandit (keeping this as it's still the best option)
  - repo: https://github.com/pycqa/bandit
    rev: 1.8.5
    hooks:
      - id: bandit
        args: [-r, --format, custom]
        exclude: ^(tests/|versioneer\.py|src/py/_version\.py|git_submodules/.*)

  # Notebook output stripping (clean notebooks before commit)
  - repo: https://github.com/kynan/nbstripout
    rev: 0.8.1
    hooks:
      - id: nbstripout
        args: [--keep-output, --keep-count]
        exclude: ^git_submodules/.*$

  # BibTeX validation and formatting
  - repo: https://github.com/FlamingTempura/bibtex-tidy
    rev: v1.14.0
    hooks:
      - id: bibtex-tidy
        args: [--curly, --numeric, --align=13, --sort=year, --duplicates=key]
        files: \.bib$
        exclude: ^git_submodules/.*$

  # Generate API documentation with lazydocs (without validation)
  - repo: local
    hooks:
      - id: lazydocs-generate
        name: Generate API documentation
        entry: python src/rxiv_maker/engine/generate_docs.py
        language: system
        files: ^src/rxiv_maker/.*\.py$
        exclude: ^git_submodules/.*$
        pass_filenames: false

  # Repository integrity and contamination prevention safeguards
  - repo: local
    hooks:
      - id: validate-submodules
        name: Validate submodule integrity
        entry: scripts/safeguards/validate-submodules.sh
        language: system
        files: ^(\.gitmodules|submodules/.*)$
        pass_filenames: false
      - id: check-repo-boundaries
        name: Check repository boundaries
        entry: python scripts/safeguards/check-repo-boundaries.py
        language: system
        files: ^(\.gitmodules|submodules/.*|src/.*|pyproject\.toml|Makefile)$
        pass_filenames: false

default_language_version:
  python: python3
