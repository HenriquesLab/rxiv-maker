repos:
  # General file formatting and cleaning (Rust-based alternatives)
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v5.0.0
    hooks:
      - id: trailing-whitespace
        exclude: ^.*\.(md|tex)$
      - id: end-of-file-fixer
        exclude: ^.*\.(md|tex|pdf|png|jpg|jpeg|svg)$
      - id: check-yaml
      - id: check-toml
      - id: check-json
      - id: check-merge-conflict
      - id: check-added-large-files
        args: ['--maxkb=1000']
      - id: mixed-line-ending
        args: ['--fix=lf']
      - id: check-executables-have-shebangs
      - id: check-shebang-scripts-are-executable

  # Spell checking with typos (Rust-based)
  - repo: https://github.com/crate-ci/typos
    rev: v1.28.0
    hooks:
      - id: typos

  # Python formatting, linting, and import sorting with Ruff (Rust-based)
  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.12.0
    hooks:
      # Linting
      - id: ruff
        args: [--fix]
        exclude: ^.*\.ipynb$
      # Formatting (replaces black, isort, autoflake, docformatter)
      - id: ruff-format
        exclude: ^.*\.ipynb$

  # Python type checking with mypy (keeping this as no mature Rust alternative exists)
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.16.1
    hooks:
      - id: mypy
        additional_dependencies: [types-PyYAML, types-requests]
        args: [--ignore-missing-imports]
        exclude: ^(versioneer\.py|src/py/utils\.py)$

  # Security checks with bandit (keeping this as it's still the best option)
  - repo: https://github.com/pycqa/bandit
    rev: 1.8.5
    hooks:
      - id: bandit
        args: [-r, --format, custom]
        exclude: ^(tests/|versioneer\.py|src/py/_version\.py)

  # Notebook output stripping (clean notebooks before commit)
  - repo: https://github.com/kynan/nbstripout
    rev: 0.8.1
    hooks:
      - id: nbstripout
        args: [--keep-output, --keep-count]

  # BibTeX validation and formatting
  - repo: https://github.com/FlamingTempura/bibtex-tidy
    rev: v1.14.0
    hooks:
      - id: bibtex-tidy
        args: [--curly, --numeric, --align=13, --sort=year, --duplicates=key]
        files: \.bib$

  # API documentation validation with lazydocs
  - repo: local
    hooks:
      - id: lazydocs-validate
        name: Validate API documentation
        entry: python src/py/commands/generate_docs.py
        language: python
        files: ^src/py/.*\.py$
        pass_filenames: false
        additional_dependencies: [lazydocs]

default_language_version:
  python: python3
