---
config:
  theme: base
  themeVariables:
    fontFamily: 'Arial, Helvetica, sans-serif'
    fontSize: 16px
    primaryColor: '#ffffff'
    primaryTextColor: '#333333'
    primaryBorderColor: '#cccccc'
    lineColor: '#666666'
    background: '#ffffff'
  layout: elk
---
flowchart TD
 subgraph A[" "]
    direction TB
      A1["📄 Manuscript Files<br><br>• 01_MAIN.md<br>• 02_SUPPLEMENTARY.md<br>• 00_CONFIG.yml"]
      A2["📚 References<br><br>• 03_REFERENCES.bib<br>• Citation Management"]
      A3["🎨 Figure Sources<br><br>• Python Scripts (.py)<br>• Mermaid Diagrams (.mmd)<br>• Data Files (.csv, .json)<br>• Static Files (.png, .jpg, .svg)"]
  end
 subgraph B1[Parsing Stage]
    direction LR
        B1A["📝 Markdown manuscript<br>Parser"]
        B1B["📋 YAML config;<br>Parser"]
        B1C["📚 BibTeX bibliography<br>Parser"]
  end
 subgraph B2[Conversion Stage]
    direction LR
        B2A["🔄 MD to LaTeX<br>Converter"]
        B2B["🎯 Figure<br>Processor"]
        B2C["📊 Table<br>Processor"]
        B2D["🔗 Citation<br>Processor"]
  end
 subgraph B3[Generation Stage]
    direction LR
        B3A["🎨 Dynamic Figure<br>Generation"]
        B3B["📐 Template<br>Assembly"]
        B3C["🎭 Style<br>Application"]
  end
 subgraph B[" "]
    direction TB
        B1
        B2
        B3
  end
 subgraph C[" "]
    direction TB
        C1["🔧 LaTeX Engine<br><br>• pdflatex/xelatex<br>• Multi-pass compilation<br>• Cross-reference resolution"]
        C2["📖 Bibliography Engine<br><br>• BibTeX processing<br>• Citation formatting<br>• Reference generation"]
        C3["🔍 Final Processing<br><br>• Index generation<br>• Table of contents<br>• Quality validation"]
  end
 subgraph D[" "]
    direction TB
        D1["📄 Publication PDF<br><br>• Camera-ready document<br>• Professional formatting<br>• Embedded figures"]
        D2["📝 LaTeX Source<br><br>• Generated .tex files<br>• Style definitions<br>• Asset references"]
        D3["📋 Build Artifacts<br><br>• Auxiliary files<br>• Build logs<br>• Debug information"]
  end
 subgraph E[" "]
    direction LR
        E1["☁️ GitHub Actions<br>CI/CD Pipeline<br><br>Automated cloud<br>compilation"]
        E2["📓 Google Colab<br>Interactive<br><br>Web-based compilation<br>environment"]
        E3["💻 Local Python<br>Environment<br><br>Direct local<br>compilation"]
  end
    A1 --> B1A & B1B
    A2 --> B1C
    A3 --> B3A
    B1A --> B2A
    B1B --> B2A
    B1C --> B2D
    B2A --> B3B
    B2B --> B3B
    B2C --> B3B
    B2D --> B3B & C2
    B3A --> B2B
    B3B --> B3C
    B3C --> C1
    C1 --> C3 & D2 & D3
    C2 --> C3
    C3 --> D1
    B -.-> E1 & E2 & E3

    A1:::componentBox
    A2:::componentBox
    A3:::componentBox
    B1A:::componentBox
    B1B:::componentBox
    B1C:::componentBox
    B2A:::componentBox
    B2B:::componentBox
    B2C:::componentBox
    B2D:::componentBox
    B3A:::componentBox
    B3B:::componentBox
    B3C:::componentBox
    C1:::componentBox
    C2:::componentBox
    C3:::componentBox
    D1:::componentBox
    D2:::componentBox
    D3:::componentBox
    E1:::componentBox
    E2:::componentBox
    E3:::componentBox
    A:::inputBox
    B:::processBox
    C:::compileBox
    D:::outputBox
    E:::deployBox
    B1:::stageBox
    B2:::stageBox
    B3:::stageBox

    classDef inputBox fill:#e8f4fd,stroke:#1976d2,stroke-width:3px,color:#333
    classDef processBox fill:#fff8e1,stroke:#f57c00,stroke-width:3px,color:#333
    classDef compileBox fill:#e8f5e8,stroke:#388e3c,stroke-width:3px,color:#333
    classDef outputBox fill:#fce4ec,stroke:#c2185b,stroke-width:3px,color:#333
    classDef deployBox fill:#f3e5f5,stroke:#7b1fa2,stroke-width:3px,color:#333
    classDef stageBox fill:#f5f5f5,stroke:#999999,stroke-width:2px,color:#333
    classDef componentBox fill:#ffffff,stroke:#666666,stroke-width:2px,color:#333
