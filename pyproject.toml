[build-system]
requires = ["setuptools>=61.0", "wheel", "versioneer[toml]==0.29"]
build-backend = "setuptools.build_meta"

[project]
name = "rxiv-maker"
dynamic = ["version"]
description = "Automated LaTeX article generation with figure creation capabilities"
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
    "matplotlib>=3.7.0",
    "seaborn>=0.12.0",
    "numpy>=1.24.0",
    "pandas>=2.0.0",
    "scipy>=1.10.0",
    "Pillow>=9.0.0",
    "pypdf>=3.0.0",
    "PyYAML>=6.0.0",
    "python-dotenv>=1.0.0",
]

[project.optional-dependencies]
all = ["rxiv-maker[dev]"]
dev = [
    "pytest>=7.4,<8.0",
    "py>=1.11.0",
    "ruff>=0.8.0",
    "mypy>=1.0",
    "types-PyYAML>=6.0.0",
    "nox>=2023.0.0",
    "pytest-cov>=4.0",
    "coverage[toml]>=7.0",
    "pytest-notebook>=0.10.0",
    "nbstripout>=0.7.1",
    "pre-commit>=4.0.0",
]

# Ruff configuration (replaces black, isort, flake8, autoflake, docformatter)
[tool.ruff]
# Set the maximum line length to match Black
line-length = 88
target-version = "py39"
exclude = [
    "versioneer.py",
    "rxiv_maker_colab.ipynb",
]

[tool.ruff.lint]
# Enable the following rule sets
select = [
    "E",    # pycodestyle errors
    "W",    # pycodestyle warnings
    "F",    # Pyflakes
    "I",    # isort
    "B",    # flake8-bugbear
    "C4",   # flake8-comprehensions
    "UP",   # pyupgrade
    "D",    # pydocstyle
    "SIM",  # flake8-simplify
]

# Ignore specific rules that conflict with Black or are too strict
ignore = [
    "E203",  # whitespace before ':'
    "D100",  # Missing docstring in public module
    "D104",  # Missing docstring in public package
    "D105",  # Missing docstring in magic method
]

[tool.ruff.format]
# Use double quotes for strings
quote-style = "double"
# Use spaces around the equals sign in keyword arguments
skip-magic-trailing-comma = false
# Prefer hanging indents for function arguments
indent-style = "space"

[tool.ruff.lint.isort]
known-first-party = ["rxiv_maker"]

[tool.ruff.lint.pydocstyle]
# Use Google-style docstrings
convention = "google"

[tool.ruff.lint.per-file-ignores]
# Ignore certain rules in test files (but keep docstring checks for main classes)
"tests/*" = ["D"]
# Ignore debug and example files
"debug_*.py" = ["D"]
"trace_*.py" = ["D"]
"notebooks/*" = ["D", "E501"]
# Ignore auto-generated files
"src/py/_version.py" = ["ALL"]
"versioneer.py" = ["ALL"]
"rxiv_maker_colab.ipynb" = ["ALL"]

[tool.mypy]
python_version = "3.9"
warn_return_any = false
warn_unused_configs = false
disallow_untyped_defs = false
explicit_package_bases = true
ignore_missing_imports = true

[tool.coverage.run]
source = ["src/py"]
omit = [
    "*/tests/*",
    "*/test_*.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-v",
    "--tb=short",
    "--strict-markers",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "notebook: marks tests as notebook tests",
    "validation: marks tests as validation-related tests",
]
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
]

# Versioneer configuration
[tool.versioneer]
VCS = "git"
style = "pep440"
versionfile_source = "src/py/_version.py"
versionfile_build = "py/_version.py"
tag_prefix = "v"
parentdir_prefix = "rxiv-maker-"

# Typos spell checker configuration
[tool.typos.files]
extend-exclude = [
    "*.log",
    "*.bib",
    "*.tex",
    "*.pdf",
    "*.png",
    "*.jpg",
    "*.jpeg",
    "*.svg",
    "build/",
    "dist/",
    ".git/",
    "__pycache__/",
    "*.egg-info/",
]

[tool.typos.default]
extend-ignore-re = [
    # LaTeX commands and environments
    "\\\\[a-zA-Z]+",
    # File paths and URLs
    "[a-zA-Z0-9-_.]+\\.[a-zA-Z0-9]{2,}",
]

[tool.typos.default.extend-words]
# Add technical terms and proper names that might be flagged as typos
rxiv = "rxiv"
arxiv = "arxiv"
biorxiv = "biorxiv"
preprint = "preprint"
doi = "doi"
orcid = "orcid"
yaml = "yaml"
toml = "toml"
# Institution names and proper nouns
instituto = "instituto"  # Portuguese for "institute"
tennant = "tennant"      # Proper surname
# LaTeX formatting sequences
ois = "ois"              # Part of LaTeX accent commands like {\c{c}}ois
# File extensions
fot = "fot"              # LaTeX font outline file extension

# Bandit security scanner configuration
[tool.bandit]
exclude_dirs = [
    "tests",
    "docs",
    ".venv",
    "output",
]
skips = [
    "B101",  # assert_used
    "B404",  # subprocess
    "B601",  # shell_injection
    "B602",  # subprocess_popen_with_shell_equals_true
    "B603",  # subprocess_without_shell_equals_true
    "B604",  # any_other_function_with_shell_equals_true
    "B605",  # start_process_with_a_shell
    "B606",  # start_process_with_no_shell
    "B607",  # start_process_with_partial_path
]

# Mermaid diagram configuration
[tool.mermaid]
theme = "dark"

[tool.mermaid.themeVariables]
primaryColor = "#1f2937"
primaryTextColor = "#ffffff"
primaryBorderColor = "#ffffff"
secondaryBorderColor = "#ffffff"
tertiaryBorderColor = "#ffffff"
secondaryTextColor = "#ffffff"
tertiaryTextColor = "#ffffff"
textColor = "#ffffff"
fontFamily = "Arial, sans-serif"
fontSize = "16px"
