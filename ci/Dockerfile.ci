# Dockerfile that matches GitHub Actions CI environment
FROM ubuntu:24.04

# We will use the system default Python (3.12 on Ubuntu 24.04) and uv-managed
# interpreters for additional versions (3.11/3.13) when needed locally.
ARG PYTHON_DEFAULT=python3

RUN apt-get update && apt-get install -y \
    python3 \
    python3-dev \
    python3-venv \
    python3-pip \
    git \
    curl \
    ca-certificates \
    build-essential \
    locales \
    && rm -rf /var/lib/apt/lists/* && \
    locale-gen en_US.UTF-8

# Install uv (same package manager as CI) and make globally accessible.
# The installer may place the binary in ~/.local/bin or ~/.cargo/bin depending on method.
RUN curl -LsSf https://astral.sh/uv/install.sh | sh && \
    if [ -f /root/.local/bin/uv ]; then ln -sf /root/.local/bin/uv /usr/local/bin/uv; fi && \
    if [ -f /root/.cargo/bin/uv ]; then ln -sf /root/.cargo/bin/uv /usr/local/bin/uv; fi
ENV PATH="/root/.local/bin:/root/.cargo/bin:$PATH"

# Set environment variables to match CI
ENV FORCE_COLOR=1 \
    UV_SYSTEM_PYTHON=1 \
    PYTHONIOENCODING=utf-8 \
    LC_ALL=C.UTF-8 \
    LANG=C.UTF-8 \
    CI=1 \
    GITHUB_ACTIONS=1

# Ensure /usr/bin/python exists pointing to python3
RUN update-alternatives --install /usr/bin/python python /usr/bin/python3 1 || true

WORKDIR /workspace

# Copy dependency metadata first for better caching
COPY pyproject.toml uv.lock* ./
RUN uv sync --frozen --extra dev || true

# Then copy the full project
COPY . .

# Create dedicated virtual environment for project
RUN uv venv /opt/uv-venv && \
    ln -sf /usr/local/bin/uv /opt/uv-venv/bin/uv && \
    uv pip install --python /opt/uv-venv/bin/python nox && \
    uv pip install --python /opt/uv-venv/bin/python -e . && \
    uv pip install --python /opt/uv-venv/bin/python 'pytest>=7.4.0' 'pytest-timeout>=2.4.0' 'pytest-asyncio>=0.21.0'

# Add venv bin to PATH so that invoking /opt/uv-venv/bin/nox (or just nox) works and its shims resolve.
ENV PATH="/opt/uv-venv/bin:$PATH"

# Default command runs the same test command as CI
CMD ["pytest", "tests/unit/", "-m", "unit and not ci_exclude", "--maxfail=3", "--tb=short", "-x"]
